// Code generated by goctl. DO NOT EDIT.
// Source: im-rpc.proto

package server

import (
	"context"

	"github.com/n8sPxD/cowIM/imrpc/imrpc"
	"github.com/n8sPxD/cowIM/imrpc/internal/logic"
	"github.com/n8sPxD/cowIM/imrpc/internal/svc"
)

type ImRPCServer struct {
	svcCtx *svc.ServiceContext
	imrpc.UnimplementedImRPCServer
}

func NewImRPCServer(svcCtx *svc.ServiceContext) *ImRPCServer {
	return &ImRPCServer{
		svcCtx: svcCtx,
	}
}

func (s *ImRPCServer) SendSingleMessage(ctx context.Context, in *imrpc.SendMessageRequest) (*imrpc.SendMessageResponse, error) {
	l := logic.NewSendSingleMessageLogic(ctx, s.svcCtx)
	return l.SendSingleMessage(in)
}
