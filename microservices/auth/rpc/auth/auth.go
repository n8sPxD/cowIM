// Code generated by goctl. DO NOT EDIT.
// Source: authrpc.proto

package auth

import (
	"context"

	"github.com/n8sPxD/cowIM/microservices/auth/rpc/types/authRpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ConnRequest = authRpc.ConnRequest
	Empty       = authRpc.Empty

	Auth interface {
		UserConnStatus(ctx context.Context, in *ConnRequest, opts ...grpc.CallOption) (*Empty, error)
	}

	defaultAuth struct {
		cli zrpc.Client
	}
)

func NewAuth(cli zrpc.Client) Auth {
	return &defaultAuth{
		cli: cli,
	}
}

func (m *defaultAuth) UserConnStatus(ctx context.Context, in *ConnRequest, opts ...grpc.CallOption) (*Empty, error) {
	client := authRpc.NewAuthClient(m.cli.Conn())
	return client.UserConnStatus(ctx, in, opts...)
}
